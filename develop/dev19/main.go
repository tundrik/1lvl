/*
*	19) –†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –ø–æ–¥–∞–≤–∞–µ–º—É—é –Ω–∞ –≤—Ö–æ–¥ —Å—Ç—Ä–æ–∫—É
*	(–Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´–≥–ª–∞–≤—Ä—ã–±–∞ ‚Äî –∞–±—ã—Ä–≤–∞–ª–≥¬ª). –°–∏–º–≤–æ–ª—ã –º–æ–≥—É—Ç –±—ã—Ç—å unicode.
*
*************************************************/
package main

import (
	"fmt"
	"strings"
)

// –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –ø–æ–¥–∞–≤–∞–µ–º—É—é –Ω–∞ –≤—Ö–æ–¥ —Å—Ç—Ä–æ–∫—É
func reverse(s string) string {
	var sb strings.Builder
	runes := []rune(s)
	// –∏–¥–µ–º –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
	for i := len(runes) - 1; 0 <= i; i-- {
		sb.WriteRune(runes[i])
	}
	return sb.String()
}

func main() {
	fmt.Println(reverse("–≥–ª–∞–≤—Ä—ã–±–∞"))
	fmt.Println(reverse("ÁãêÁä¨"))
	fmt.Println(reverse("üòé‚öΩ"))
}
